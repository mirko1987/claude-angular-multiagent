name: Angular AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**.ts'
      - '**.js'
      - '**.html'
      - '**.css'
      - '**.scss'

jobs:
  ai-code-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd ${{ github.workspace }}
          npm install

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **/*.ts
            **/*.js
            **/*.html
            **/*.css
            **/*.scss

      - name: Run AI Review
        id: ai-review
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ANTHROPIC_MODEL: claude-sonnet-4-20250514
          ENABLE_CACHING: true
          MAX_CONCURRENT_AGENTS: 3
          LOG_LEVEL: info
        run: |
          # Build the project
          npm run build

          # Run review on changed files
          FILES="${{ steps.changed-files.outputs.all_changed_files }}"

          # Generate review
          node dist/index.js review-github $FILES > review-output.md

          # Save output for next step
          echo "review_generated=true" >> $GITHUB_OUTPUT

      - name: Comment PR
        if: steps.ai-review.outputs.review_generated == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const review = fs.readFileSync('review-output.md', 'utf8');

            // Check if comment already exists
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('ðŸ¤– AI Code Review')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: review
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: review
              });
            }

      - name: Upload report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ai-review-report
          path: review-output.md
          retention-days: 30

      - name: Check for critical issues
        if: steps.ai-review.outputs.review_generated == 'true'
        run: |
          # Fail workflow if critical issues found
          if grep -q "ðŸ”´ Critical Issues" review-output.md; then
            echo "::error::Critical issues found in code review"
            exit 1
          fi
